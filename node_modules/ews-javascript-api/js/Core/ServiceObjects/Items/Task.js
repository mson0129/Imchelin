"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var XmlElementNames_1 = require("../../XmlElementNames");
var AttachableAttribute_1 = require("../../../Attributes/AttachableAttribute");
var Item_1 = require("./Item");
/**
 * ## *Not Implemented*
 */
var Task = (function (_super) {
    __extends(Task, _super);
    function Task() {
        _super.apply(this, arguments);
    }
    //////ActualWork: number;
    //////AssignedTime: Date;
    //////BillingInformation: string;
    //////ChangeCount: number;
    //////Companies: StringList;
    //////CompleteDate: Date;
    //////Contacts: StringList;
    //////DelegationState: TaskDelegationState;
    //////Delegator: string;
    //////DueDate: Date;
    //////Mode: TaskMode;
    //////IsComplete: boolean;
    //////IsRecurring: boolean;
    //////IsTeamTask: boolean;
    //////Mileage: string;
    //////Owner: string;
    //////PercentComplete: number;
    //////Recurrence: Recurrence;
    //////StartDate: Date;
    //////Status: TaskStatus;
    //////StatusDescription: string;
    //////TotalWork: number;
    //////DefaultAffectedTaskOccurrences: AffectedTaskOccurrence;
    //////Bind(service: ExchangeService, id: ItemId, propertySet: PropertySet): Task { throw new Error("Task.ts - Bind : Not implemented."); }
    //////Bind(service: ExchangeService, id: ItemId): Task { throw new Error("Task.ts - Bind : Not implemented."); }
    //////DeleteCurrentOccurrence(deleteMode: DeleteMode): any { throw new Error("Task.ts - DeleteCurrentOccurrence : Not implemented."); }
    //////GetIsTimeZoneHeaderRequired(isUpdateOperation: boolean): boolean { throw new Error("Task.ts - GetIsTimeZoneHeaderRequired : Not implemented."); }
    //////GetMinimumRequiredServerVersion(): ExchangeVersion { throw new Error("Task.ts - GetMinimumRequiredServerVersion : Not implemented."); }
    //////GetSchema(): ServiceObjectSchema { throw new Error("Task.ts - GetSchema : Not implemented."); }
    Task.prototype.GetXmlElementName = function () { return XmlElementNames_1.XmlElementNames.Task; };
    Task = __decorate([
        AttachableAttribute_1.AttachableAttribute(true), 
        __metadata('design:paramtypes', [])
    ], Task);
    return Task;
}(Item_1.Item));
exports.Task = Task;
