"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var XmlElementNames_1 = require("../../XmlElementNames");
var AttachableAttribute_1 = require("../../../Attributes/AttachableAttribute");
var Item_1 = require("./Item");
/**
 * ## *Not Implemented*
 */
var PostItem = (function (_super) {
    __extends(PostItem, _super);
    function PostItem() {
        _super.apply(this, arguments);
    }
    ////////ConversationIndex: System.Byte[];
    ////////ConversationTopic: string;
    ////////From: EmailAddress;
    ////////InternetMessageId: string;
    ////////IsRead: boolean;
    ////////PostedTime: Date;
    ////////References: string;
    ////////Sender: EmailAddress;
    ////////Bind(service: ExchangeService, id: ItemId, propertySet: PropertySet): PostItem { throw new Error("PostItem.ts - Bind : Not implemented."); }
    ////////Bind(service: ExchangeService, id: ItemId): PostItem { throw new Error("PostItem.ts - Bind : Not implemented."); }
    ////////CreateForward(): ResponseMessage { throw new Error("PostItem.ts - CreateForward : Not implemented."); }
    ////////CreatePostReply(): PostReply { throw new Error("PostItem.ts - CreatePostReply : Not implemented."); }
    ////////CreateReply(replyAll: boolean): ResponseMessage { throw new Error("PostItem.ts - CreateReply : Not implemented."); }
    ////////Forward(bodyPrefix: MessageBody, toRecipients: any): any { throw new Error("PostItem.ts - Forward : Not implemented."); }
    ////////Forward(bodyPrefix: MessageBody, toRecipients: System.Collections.Generic.IEnumerable<T>): any { throw new Error("PostItem.ts - Forward : Not implemented."); }
    ////////GetMinimumRequiredServerVersion(): ExchangeVersion { throw new Error("PostItem.ts - GetMinimumRequiredServerVersion : Not implemented."); }
    ////////GetSchema(): ServiceObjectSchema { throw new Error("PostItem.ts - GetSchema : Not implemented."); }
    PostItem.prototype.GetXmlElementName = function () { return XmlElementNames_1.XmlElementNames.PostItem; };
    PostItem = __decorate([
        AttachableAttribute_1.AttachableAttribute(true), 
        __metadata('design:paramtypes', [])
    ], PostItem);
    return PostItem;
}(Item_1.Item));
exports.PostItem = PostItem;
