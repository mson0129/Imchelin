"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var XmlElementNames_1 = require("../../XmlElementNames");
var AttachableAttribute_1 = require("../../../Attributes/AttachableAttribute");
var MeetingMessage_1 = require("./MeetingMessage");
/**
 * ## *Not Implemented*
 */
var MeetingCancellation = (function (_super) {
    __extends(MeetingCancellation, _super);
    function MeetingCancellation() {
        _super.apply(this, arguments);
    }
    //////Start: Date;
    //////End: Date;
    //////Location: string;
    //////Recurrence: Recurrence;
    //////EnhancedLocation: EnhancedLocation;
    //////Bind(service: ExchangeService, id: ItemId, propertySet: PropertySet): MeetingCancellation { throw new Error("MeetingCancellation.ts - Bind : Not implemented."); }
    //////Bind(service: ExchangeService, id: ItemId): MeetingCancellation { throw new Error("MeetingCancellation.ts - Bind : Not implemented."); }
    //////GetMinimumRequiredServerVersion(): ExchangeVersion { throw new Error("MeetingCancellation.ts - GetMinimumRequiredServerVersion : Not implemented."); }
    //////GetSchema(): ServiceObjectSchema { throw new Error("MeetingCancellation.ts - GetSchema : Not implemented."); }
    MeetingCancellation.prototype.GetXmlElementName = function () { return XmlElementNames_1.XmlElementNames.MeetingCancellation; };
    MeetingCancellation = __decorate([
        AttachableAttribute_1.AttachableAttribute(false), 
        __metadata('design:paramtypes', [])
    ], MeetingCancellation);
    return MeetingCancellation;
}(MeetingMessage_1.MeetingMessage));
exports.MeetingCancellation = MeetingCancellation;
