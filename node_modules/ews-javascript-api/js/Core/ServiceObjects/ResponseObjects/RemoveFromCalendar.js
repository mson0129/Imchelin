"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var XmlElementNames_1 = require("../../XmlElementNames");
var ServiceObject_1 = require("../ServiceObject");
var RemoveFromCalendar = (function (_super) {
    __extends(RemoveFromCalendar, _super);
    function RemoveFromCalendar() {
        _super.apply(this, arguments);
    }
    RemoveFromCalendar.prototype.GetMinimumRequiredServerVersion = function () { throw new Error("RemoveFromCalendar.ts - GetMinimumRequiredServerVersion : Not implemented."); };
    RemoveFromCalendar.prototype.GetSchema = function () { throw new Error("RemoveFromCalendar.ts - GetSchema : Not implemented."); };
    RemoveFromCalendar.prototype.GetXmlElementName = function () { return XmlElementNames_1.XmlElementNames.RemoveItem; };
    RemoveFromCalendar.prototype.InternalCreate = function (parentFolderId, messageDisposition) { throw new Error("RemoveFromCalendar.ts - InternalCreate : Not implemented."); };
    RemoveFromCalendar.prototype.InternalDelete = function (deleteMode, sendCancellationsMode, affectedTaskOccurrences) { throw new Error("RemoveFromCalendar.ts - InternalDelete : Not implemented."); };
    RemoveFromCalendar.prototype.InternalLoad = function (propertySet) { throw new Error("RemoveFromCalendar.ts - InternalLoad : Not implemented."); };
    return RemoveFromCalendar;
}(ServiceObject_1.ServiceObject));
exports.RemoveFromCalendar = RemoveFromCalendar;
//}
